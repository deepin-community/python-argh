From: Marco Nenciarini <mnencia@debian.org>
Date: Fri, 16 Dec 2016 15:21:42 +0100
Subject: Avoid depending on iocapture
Forwarded: https://github.com/neithere/argh/pull/177

---
 setup.py                 | 2 +-
 test/test_integration.py | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

--- python3-argh.orig/tests/test_integration.py
+++ python3-argh/tests/test_integration.py
@@ -7,7 +7,6 @@
 import sys
 import unittest.mock as mock
 
-import iocapture
 import pytest
 
 import argh
@@ -757,7 +756,7 @@
     assert func.__doc__ in p.format_help()
 
 
-def test_prog():
+def test_prog(capsys: pytest.CaptureFixture[str]):
     "Program name propagates from sys.argv[0]"
 
     def cmd(foo=1):
@@ -768,9 +767,9 @@
 
     usage = get_usage_string()
 
-    with iocapture.capture() as captured:
-        assert run(p, "-h", exit=True) is None
-        assert captured.stdout.startswith(usage)
+    assert run(p, "-h", exit=True) is None
+    captured = capsys.readouterr()
+    assert captured.out.startswith(usage)
 
 
 def test_unknown_args():
@@ -788,8 +787,117 @@
         out="1\n", err=""
     )
 
+def test_add_commands_no_overrides1(capsys: pytest.CaptureFixture[str]):
+    def first_func(foo=123):
+        """Owl stretching time"""
+        pass
+
+    def second_func():
+        pass
+
+    p = argh.ArghParser(prog="myapp")
+    p.add_commands(
+        [first_func, second_func],
+    )
+
+    run(p, "--help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp [-h] {{first-func,second-func}} ...
+
+        positional arguments:
+          {{first-func,second-func}}
+            first-func          Owl stretching time
+            second-func
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help            show this help message and exit
+        """
+        )[1:]
+    )
+
+
+def test_add_commands_no_overrides2(capsys: pytest.CaptureFixture[str]):
+    def first_func(foo=123):
+        """Owl stretching time"""
+        pass
+
+    def second_func():
+        pass
+
+    p = argh.ArghParser(prog="myapp")
+    p.add_commands(
+        [first_func, second_func],
+    )
+
+    run(p, "first-func --help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp first-func [-h] [-f FOO]
+
+        Owl stretching time
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help         show this help message and exit
+          -f FOO, --foo FOO  123
+        """
+        )[1:]
+    )
+
+def test_add_commands_namespace_overrides1(capsys: pytest.CaptureFixture[str]):
+    """
+    When `namespace_kwargs` is passed to `add_commands()`, its members override
+    whatever was specified on function level.
+    """
+
+    def first_func(foo=123):
+        """Owl stretching time"""
+        pass
+
+    def second_func():
+        pass
+
+    p = argh.ArghParser(prog="myapp")
+    p.add_commands(
+        [first_func, second_func],
+        namespace="ns",
+        namespace_kwargs={
+            "help": "namespace help override",
+            "description": "namespace description override",
+        },
+    )
+
+    run(p, "--help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp [-h] {{ns}} ...
+
+        positional arguments:
+          {{ns}}
+            ns
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help  show this help message and exit
+        """
+        )[1:]
+    )
+
+
+def test_add_commands_namespace_overrides2(capsys: pytest.CaptureFixture[str]):
+    """
+    When `namespace_kwargs` is passed to `add_commands()`, its members override
+    whatever was specified on function level.
+    """
 
-def test_add_commands_no_overrides():
     def first_func(foo=123):
         """Owl stretching time"""
         pass
@@ -800,46 +908,37 @@
     p = argh.ArghParser(prog="myapp")
     p.add_commands(
         [first_func, second_func],
+        namespace="ns",
+        namespace_kwargs={
+            "help": "namespace help override",
+            "description": "namespace description override",
+        },
     )
 
-    with iocapture.capture() as captured:
-        run(p, "--help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp [-h] {{first-func,second-func}} ...
-
-            positional arguments:
-              {{first-func,second-func}}
-                first-func          Owl stretching time
-                second-func
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help            show this help message and exit
-            """
-            )[1:]
-        )
-
-    with iocapture.capture() as captured:
-        run(p, "first-func --help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp first-func [-h] [-f FOO]
-
-            Owl stretching time
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help         show this help message and exit
-              -f FOO, --foo FOO  123
-            """
-            )[1:]
-        )
+    run(p, "ns --help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp ns [-h] {{first-func,second-func}} ...
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help            show this help message and exit
+
+        subcommands:
+          namespace description override
+
+          {{first-func,second-func}}
+                                namespace help override
+            first-func          Owl stretching time
+            second-func
+        """
+        )[1:]
+    )
 
 
-def test_add_commands_namespace_overrides():
+def test_add_commands_namespace_overrides3(capsys: pytest.CaptureFixture[str]):
     """
     When `namespace_kwargs` is passed to `add_commands()`, its members override
     whatever was specified on function level.
@@ -862,65 +961,67 @@
         },
     )
 
-    with iocapture.capture() as captured:
-        run(p, "--help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp [-h] {{ns}} ...
-
-            positional arguments:
-              {{ns}}
-                ns
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help  show this help message and exit
-            """
-            )[1:]
-        )
-
-    with iocapture.capture() as captured:
-        run(p, "ns --help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp ns [-h] {{first-func,second-func}} ...
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help            show this help message and exit
-
-            subcommands:
-              namespace description override
-
-              {{first-func,second-func}}
-                                    namespace help override
-                first-func          Owl stretching time
-                second-func
-            """
-            )[1:]
-        )
-
-    with iocapture.capture() as captured:
-        run(p, "ns first-func --help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp ns first-func [-h] [-f FOO]
-
-            Owl stretching time
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help         show this help message and exit
-              -f FOO, --foo FOO  123
-            """
-            )[1:]
-        )
+    run(p, "ns first-func --help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp ns first-func [-h] [-f FOO]
+
+        Owl stretching time
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help         show this help message and exit
+          -f FOO, --foo FOO  123
+        """
+        )[1:]
+    )
+
+
+def test_add_commands_func_overrides1(capsys: pytest.CaptureFixture[str]):
+    """
+    When `func_kwargs` is passed to `add_commands()`, its members override
+    whatever was specified on function level.
+    """
+
+    def first_func(foo=123):
+        """Owl stretching time"""
+        pass
+
+    def second_func():
+        pass
+
+    p = argh.ArghParser(prog="myapp")
+    p.add_commands(
+        [first_func, second_func],
+        func_kwargs={
+            "help": "func help override",
+            "description": "func description override",
+        },
+    )
+
+    run(p, "--help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp [-h] {{first-func,second-func}} ...
+
+        positional arguments:
+          {{first-func,second-func}}
+            first-func          func help override
+            second-func         func help override
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help            show this help message and exit
+        """
+        )[1:]
+    )
 
 
-def test_add_commands_func_overrides():
+def test_add_commands_func_overrides2(capsys: pytest.CaptureFixture[str]):
     """
     When `func_kwargs` is passed to `add_commands()`, its members override
     whatever was specified on function level.
@@ -942,38 +1043,19 @@
         },
     )
 
-    with iocapture.capture() as captured:
-        run(p, "--help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp [-h] {{first-func,second-func}} ...
-
-            positional arguments:
-              {{first-func,second-func}}
-                first-func          func help override
-                second-func         func help override
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help            show this help message and exit
-            """
-            )[1:]
-        )
-
-    with iocapture.capture() as captured:
-        run(p, "first-func --help", exit=True)
-        assert (
-            captured.stdout
-            == unindent(
-                f"""
-            usage: myapp first-func [-h] [-f FOO]
-
-            func description override
-
-            {HELP_OPTIONS_LABEL}:
-              -h, --help         show this help message and exit
-              -f FOO, --foo FOO  123
-            """
-            )[1:]
-        )
+    run(p, "first-func --help", exit=True)
+    captured = capsys.readouterr()
+    assert (
+        captured.out
+        == unindent(
+            f"""
+        usage: myapp first-func [-h] [-f FOO]
+
+        func description override
+
+        {HELP_OPTIONS_LABEL}:
+          -h, --help         show this help message and exit
+          -f FOO, --foo FOO  123
+        """
+        )[1:]
+    )
--- python3-argh.orig/pyproject.toml
+++ python3-argh/pyproject.toml
@@ -55,7 +55,6 @@
 test = [
     "tox >= 4.4",
     "pytest >= 7.2",
-    "iocapture >= 0.1.2",
     "pytest-cov >= 4.0",
 ]
 docs = [
--- python3-argh.orig/PKG-INFO
+++ python3-argh/PKG-INFO
@@ -30,7 +30,6 @@
 Requires-Dist: pre-commit >= 3.0.4 ; extra == "linters"
 Requires-Dist: tox >= 4.4 ; extra == "test"
 Requires-Dist: pytest >= 7.2 ; extra == "test"
-Requires-Dist: iocapture >= 0.1.2 ; extra == "test"
 Requires-Dist: pytest-cov >= 4.0 ; extra == "test"
 Project-URL: Discussions, https://github.com/neithere/argh/discussions
 Project-URL: Documentation, https://argh.readthedocs.io/en/latest
